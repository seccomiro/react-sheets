{"version":3,"sources":["components/cellWrapper.js","actions/index.js","actions/types.js","components/FormulaInput.js","components/Cell.js","logic/cell.js","components/FormulaBar.js","components/Sheet.js","history.js","components/Help.js","components/App.js","logic/formula.js","logic/Cell.js","reducers/sheetReducer.js","logic/Sheet.js","reducers/index.js","store.js","index.js"],"names":["ChildComponent","updateCell","cellName","formula","type","payload","updateEditingCell","value","selectCell","name","selected","options","nextRow","nextColumn","previousRow","previousColumn","FormulaInput","onChange","e","props","target","onKeyDown","which","nextElement","previous","save","preventDefault","way","onFocus","atFormulaBar","selectFormulaBar","onBlur","this","autoFocus","formulaBarSelected","Component","connect","state","sheet","selectedCell","tempFormula","entering","Cell","focusSelecTed","field","focus","onEditCell","editCell","onSelectCell","shift","shiftKey","ctrl","ctrlKey","onEditingKeyDown","onSelectedKeyDown","printableKey","key","String","fromCharCode","editing","className","ref","onClick","onDoubleClick","tabIndex","cell","React","cellWrapper","ownProps","findCell","selectedClass","highlighted","showSquare","letters","indexToColumn","i","indexToRow","indexToCell","iRow","iColumn","cellToIndex","row","parseInt","column","indexOf","toUpperCase","FormulaBar","icon","faCalculator","Sheet","style","textAlign","cells","map","cellName1","cellName2","getName","j","isHighlighted","highlightedAreas","renderCells","createBrowserHistory","Help","href","rel","App","history","basename","process","path","exact","component","operators","isCell","isNumber","match","isNaN","listeners","Set","pointedCells","cellNames","presentCells","split","filter","trim","register","evaluate","add","getCellName","cellIsHighlighted","params","startsWith","substring","length","pointedCellParams","forEach","Object","keys","initialSheet","rows","columns","Map","createCells","pointingCell","pointedCellNames","registerListener","cellMap","index","startName","endName","start","end","rowStep","colStep","col","push","find","a","includes","setFormula","rowCount","columnCount","set","get","firstCell","INITIAL_STATE","combineReducers","action","update","$set","findCells","newArea","undefined","nextColumnName","nextColumnFormula","nextRowName","nextRowFormula","previousColumnName","previousColumnFormula","previousRowName","previousRowFormula","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.22b6c390.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nexport default ChildComponent => {\n  class CellWrapper extends Component {\n    showSquare() {\n      if (this.props.selected && !this.props.editing) {\n        return <div className=\"cell-square\"></div>;\n      }\n    }\n\n    render() {\n      const selectedClass = `${this.props.selected ? 'selected' : ''} ${\n        this.props.editing ? 'editing' : ''\n      } ${this.props.highlighted ? 'highlighted' : ''}`;\n\n      return (\n        <td className={selectedClass}>\n          <div className={`cell-wrapper ${selectedClass}`}>\n            <ChildComponent\n              {...this.props}\n              selected={this.props.selected}\n              editing={this.props.editing}\n              highlighted={this.props.highlighted}\n            />\n            {this.showSquare()}\n          </div>\n        </td>\n      );\n    }\n  }\n\n  return CellWrapper;\n};\n","import {\n  UPDATE_CELL,\n  SELECT_CELL,\n  NEXT_ROW,\n  NEXT_COLUMN,\n  UPDATE_EDITING_CELL,\n  EDIT_CELL,\n  PREVIOUS_ROW,\n  PREVIOUS_COLUMN,\n  SELECT_FORMULA_BAR,\n} from './types';\n\nexport const updateCell = (cellName, formula) => {\n  return { type: UPDATE_CELL, payload: { cellName, formula } };\n};\n\nexport const updateEditingCell = value => {\n  return { type: UPDATE_EDITING_CELL, payload: value };\n};\n\nexport const selectCell = (name, selected, options = {}) => {\n  return { type: SELECT_CELL, payload: { name, selected, options } };\n};\n\nexport const editCell = (name, selected, value) => {\n  return { type: EDIT_CELL, payload: { name, selected, value } };\n};\n\nexport const nextRow = () => {\n  return { type: NEXT_ROW };\n};\n\nexport const nextColumn = () => {\n  return { type: NEXT_COLUMN };\n};\n\nexport const previousRow = () => {\n  return { type: PREVIOUS_ROW };\n};\n\nexport const previousColumn = () => {\n  return { type: PREVIOUS_COLUMN };\n};\n\nexport const selectFormulaBar = (entering = true) => {\n  return { type: SELECT_FORMULA_BAR, payload: { entering } };\n};\n","export const UPDATE_CELL = 'UPDATE_CELL';\nexport const UPDATE_EDITING_CELL = 'UPDATE_EDITING_CELL';\nexport const SELECT_CELL = 'SELECT_CELL';\nexport const EDIT_CELL = 'EDIT_CELL';\nexport const NEXT_ROW = 'NEXT_ROW';\nexport const NEXT_COLUMN = 'NEXT_COLUMN';\nexport const PREVIOUS_ROW = 'PREVIOUS_ROW';\nexport const PREVIOUS_COLUMN = 'PREVIOUS_COLUMN';\nexport const SELECT_FORMULA_BAR = 'SELECT_FORMULA_BAR';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateEditingCell,\n  updateCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n  selectFormulaBar,\n  selectCell,\n} from '../actions';\n\nclass FormulaInput extends Component {\n  onChange = e => {\n    this.props.updateEditingCell(e.target.value);\n  };\n\n  onKeyDown = e => {\n    if (e.which === 9) this.nextElement('Column', e, false, true);\n    else if (e.which === 13) this.nextElement('Row', e, false, true);\n    else if (e.which === 27) this.props.selectCell(this.props.name, true);\n  };\n\n  nextElement = (type, e, previous = false, save = false) => {\n    e.preventDefault();\n    const way = previous ? 'previous' : 'next';\n    if (save) {\n      this.props.updateCell(this.props.name, e.target.value);\n    }\n    this.props[`${way}${type}`]();\n  };\n\n  onFocus = () => {\n    if (this.props.atFormulaBar) {\n      this.props.selectFormulaBar(true);\n    }\n  };\n\n  onBlur = e => {\n    if (this.props.atFormulaBar) {\n      this.props.selectFormulaBar(false);\n    }\n    this.props.updateCell(this.props.name, e.target.value);\n  };\n\n  render() {\n    return (\n      <input\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyDown={this.onKeyDown}\n        onChange={this.onChange}\n        type=\"text\"\n        value={this.props.formula}\n        autoFocus={!this.props.formulaBarSelected}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formula: state.sheet.selectedCell.tempFormula,\n    name: state.sheet.selectedCell.name,\n    formulaBarSelected: state.sheet.selectedCell.formulaBarSelected,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateEditingCell,\n  updateCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n  selectFormulaBar,\n  selectCell,\n})(FormulaInput);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateCell,\n  updateEditingCell,\n  editCell,\n  selectCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n} from '../actions';\nimport cellWrapper from './cellWrapper';\nimport FormulaInput from './FormulaInput';\n\nclass Cell extends React.Component {\n  componentDidMount() {\n    this.focusSelecTed();\n  }\n\n  componentDidUpdate() {\n    this.focusSelecTed();\n  }\n\n  focusSelecTed = () => {\n    if (this.field && !this.props.selectedCell.formulaBarSelected) {\n      this.field.focus();\n    }\n  };\n\n  onEditCell = e => {\n    this.props.editCell(this.props.name, true);\n  };\n\n  onSelectCell = e => {\n    this.props.selectCell(this.props.name, true, {\n      shift: !!e.shiftKey,\n      ctrl: !!e.ctrlKey,\n    });\n  };\n\n  onEditingKeyDown = e => {\n    if (e.which === 13) this.nextElement('Row', e, false, true);\n    else if (e.which === 37) this.nextElement('Column', e, true, true);\n    else if (e.which === 38) this.nextElement('Row', e, true, true);\n    else if (e.which === 39) this.nextElement('Column', e, false, true);\n    else if (e.which === 40) this.nextElement('Row', e, false, true);\n  };\n\n  onSelectedKeyDown = e => {\n    if (e.which === 113 || e.which === 13) {\n      e.preventDefault();\n      this.props.editCell(this.props.name, true);\n    } else if (e.which === 9) this.nextElement('Column', e);\n    else if (e.which === 37) this.nextElement('Column', e, true);\n    else if (e.which === 38) this.nextElement('Row', e, true);\n    else if (e.which === 39) this.nextElement('Column', e);\n    else if (e.which === 40) this.nextElement('Row', e);\n    else if (this.printableKey(e.which)) {\n      e.preventDefault();\n      this.props.editCell(this.props.name, true, this.printableKey(e.which));\n    }\n  };\n\n  nextElement = (type, e, previous = false, save = false) => {\n    e.preventDefault();\n    const way = previous ? 'previous' : 'next';\n    if (save) {\n      this.props.updateCell(this.props.name, e.target.value);\n    }\n    this.props[`${way}${type}`]();\n  };\n\n  printableKey(key) {\n    // Only letters, numbers and equal for now\n    if (key >= 48 && key <= 90) {\n      return String.fromCharCode(key);\n    } else if (key >= 96 && key <= 105) {\n      return String.fromCharCode(key - 48);\n    } else if (key === 187) {\n      return '=';\n    }\n    return false;\n  }\n\n  render() {\n    if (this.props.selected) {\n      if (this.props.editing) {\n        return (\n          <div className=\"cell selected\">\n            <FormulaInput onKeyDown={this.onEditingKeyDown} />\n          </div>\n        );\n      } else {\n        return (\n          <div\n            ref={field => (this.field = field)}\n            className=\"cell selected\"\n            onClick={this.onSelectCell}\n            onDoubleClick={this.onEditCell}\n            onKeyDown={this.onSelectedKeyDown}\n            tabIndex=\"0\"\n          >\n            <div>{this.props.cell.value || '\\u00A0'}</div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div\n          className=\"cell\"\n          onClick={this.onSelectCell}\n          onDoubleClick={this.onEditCell}\n        >\n          <div>{this.props.cell.value || '\\u00A0'}</div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const cell = state.sheet.sheet.findCell(ownProps.name);\n  return { selectedCell: state.sheet.selectedCell, cell };\n};\n\nexport default cellWrapper(\n  connect(mapStateToProps, {\n    updateCell,\n    updateEditingCell,\n    editCell,\n    selectCell,\n    nextColumn,\n    nextRow,\n    previousColumn,\n    previousRow,\n  })(Cell)\n);\n","const letters = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n\nexport const indexToColumn = i => letters[i];\n\nexport const columnToIndex = column => letters.indexOf(column.toUpperCase());\n\nexport const rowToIndex = row => parseInt(row) - 1;\n\nexport const indexToRow = i => i + 1;\n\nexport const indexToCell = (iRow, iColumn) =>\n  `${indexToColumn(iColumn)}${indexToRow(iRow)}`;\n\nexport const cellToIndex = cell => ({\n  row: rowToIndex(cell[1]),\n  column: columnToIndex(cell[0]),\n});\n\nexport const sameRow = (cellName1, cellName2) =>\n  cellName1 &&\n  cellName2 &&\n  cellToIndex(cellName1).row === cellToIndex(cellName2).row;\n\nexport const sameColumn = (cellName1, cellName2) =>\n  cellName1 &&\n  cellName2 &&\n  cellToIndex(cellName1).column === cellToIndex(cellName2).column;\n","import React from 'react';\nimport FormulaInput from './FormulaInput';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons';\n\nconst FormulaBar = () => (\n  <div className=\"formula-bar\">\n    <div className=\"icon\">\n      <FontAwesomeIcon icon={faCalculator} />\n    </div>\n    <FormulaInput atFormulaBar={true} />\n  </div>\n);\n\nexport default FormulaBar;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Cell from './Cell';\nimport { indexToRow, indexToColumn, sameColumn, sameRow } from '../logic/cell';\nimport FormulaBar from './FormulaBar';\n\nclass Sheet extends React.Component {\n  renderCells() {\n    return (\n      <div className=\"sheet\">\n        <FormulaBar />\n        <table className=\"sheet-table\">\n          <thead style={{ textAlign: 'right' }}>\n            <tr>\n              <th className=\"column-header\"></th>\n              {this.props.cells[0].map((cell, i) => (\n                <th\n                  key={`c${i}`}\n                  className={`column-header ${\n                    sameColumn(this.props.selectedCell?.name, cell.getName())\n                      ? 'selected'\n                      : ''\n                  }`}\n                >\n                  <div>{indexToColumn(i)}</div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.cells.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => (\n                  <Fragment key={j}>\n                    {j === 0 ? (\n                      <th\n                        className={`row-header ${\n                          sameRow(this.props.selectedCell?.name, cell.getName())\n                            ? 'selected'\n                            : ''\n                        }`}\n                      >\n                        <div>{indexToRow(i)}</div>\n                      </th>\n                    ) : (\n                      <></>\n                    )}\n                    <Cell\n                      name={cell.getName()}\n                      selected={\n                        this.props.selectedCell?.name === cell.getName()\n                      }\n                      editing={\n                        this.props.selectedCell?.name === cell.getName() &&\n                        this.props.selectedCell.editing\n                      }\n                      highlighted={cell.isHighlighted(\n                        this.props.highlightedAreas\n                      )}\n                    />\n                  </Fragment>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.renderCells()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cells: state.sheet.sheet.cells,\n    selectedCell: state.sheet.selectedCell,\n    highlightedAreas: state.sheet.highlightedAreas,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Sheet);\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React from 'react';\n\nconst Help = () => (\n  <div className=\"help\">\n    <p>\n      This app is a work in progress by{' '}\n      <a\n        href=\"https://www.linkedin.com/in/diegostiehl\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Diego Stiehl\n      </a>\n      . You can see its code here:{' '}\n      <a\n        href=\"https://github.com/seccomiro/react-sheets\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        https://github.com/seccomiro/react-sheets\n      </a>\n      .\n    </p>\n    <p>At this point in time you can:</p>\n    <ul>\n      <li>\n        Navigate through cells (enabling editing of them) using <em>TAB</em>,{' '}\n        <em>ENTER</em>, <em>arrows</em> or <em>mouse</em>.\n      </li>\n      <li>\n        Edit cells using <em>F2</em>, <em>ENTER</em> or by clicking at the <em>Formula Bar</em>.\n      </li>\n      <li>\n        Cancel editing using <em>ESC</em>.\n      </li>\n      <li>\n        Type <em>numeric</em> values, like <em>10</em> or <em>99.56</em> at any available\n        cell.\n      </li>\n      <li>\n        Type simple math formulas using the cells, like:{' '}\n        <em>=A1+(B2/C3)*D5-10</em> (try to avoid circular references because\n        it's not solved yet).\n      </li>\n      <li>\n        Edit the values of cells yout pointed on any formula and watch the{' '}\n        <em>automatic recalculation</em> of the entire spreadsheet.\n        <ul>\n          <li>\n            Tip: Try to write a formula that depends on two cells that have\n            formulas that depends on other cells that have regular numbers and,\n            after that, change these regular numbers.\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Help;\n","import React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport Sheet from './Sheet';\nimport history from '../history';\nimport Help from './Help';\n\nconst App = () => {\n  return (\n    <div>\n      <HashRouter history={history} basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Sheet} />\n        </Switch>\n      </HashRouter>\n      <Help />\n    </div>\n  );\n};\n\nexport default App;\n","import { evaluate } from 'mathjs';\n\nexport const operators = /([+,*,/,=,\\-,(,)])/g;\n\nexport const pointedCells = formula => {\n  const presentCells = formula.split(operators).filter(e => isCell(e.trim()));\n  return [...new Set(presentCells)];\n};\n\nexport const isCell = value =>\n  !isNumber(value) && value !== '' && value !== '=' && !value.match(operators);\n\nexport const isNumber = value => !isNaN(value);\n\nexport const evaluateFormula = (formula, params) => {\n  return evaluate(formula, params);\n};\n","import { pointedCells, evaluateFormula } from './formula';\n\nclass Cell {\n  constructor({ sheet, formula = '0', value = '0' }) {\n    this.sheet = sheet;\n    this.formula = formula;\n    this.value = value;\n    this.listeners = new Set();\n    this.pointedCells = {};\n  }\n\n  setFormula(formula) {\n    this.formula = formula;\n    const cellNames = pointedCells(formula);\n    this.pointedCells = this.sheet.register(this, cellNames);\n    this.evaluate();\n  }\n\n  registerListener(cell) {\n    this.listeners.add(cell);\n  }\n\n  getName() {\n    return this.sheet.getCellName(this);\n  }\n\n  isHighlighted(highlightedAreas) {\n    return this.sheet.cellIsHighlighted(this.getName(), highlightedAreas);\n  }\n\n  evaluate() {\n    if (this.formula.startsWith('=')) {\n      this.value = evaluateFormula(\n        this.formula.substring(1, this.formula.length),\n        this.pointedCellParams()\n      );\n    } else {\n      this.value = this.formula;\n    }\n\n    this.listeners.forEach(cell => cell.evaluate());\n  }\n\n  pointedCellParams() {\n    const map = {};\n    Object.keys(this.pointedCells).forEach(\n      cellName => (map[cellName] = this.pointedCells[cellName].value)\n    );\n    return map;\n  }\n}\n\nexport default Cell;\n","import {\n  UPDATE_CELL,\n  EDIT_CELL,\n  NEXT_COLUMN,\n  NEXT_ROW,\n  UPDATE_EDITING_CELL,\n  SELECT_CELL,\n  PREVIOUS_COLUMN,\n  PREVIOUS_ROW,\n  SELECT_FORMULA_BAR,\n} from '../actions/types';\nimport update from 'react-addons-update';\nimport Sheet from '../logic/Sheet';\n\nconst initialSheet = new Sheet({ rows: 9, columns: 26, name: 'Sheet 1' });\nconst firstCell = initialSheet.findCell('A1');\n\nconst INITIAL_STATE = {\n  sheet: initialSheet,\n  selectedCell: {\n    name: firstCell.getName(),\n    editing: false,\n    tempFormula: firstCell.formula,\n    formulaBarSelected: false,\n  },\n  highlightedAreas: [\n    {\n      start: firstCell.getName(),\n      end: firstCell.getName(),\n      cells: [firstCell],\n      cellNames: [firstCell.getName()],\n    },\n  ],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_EDITING_CELL:\n      return update(state, {\n        selectedCell: {\n          tempFormula: { $set: action.payload.toUpperCase() },\n        },\n      });\n    case UPDATE_CELL:\n      const { cellName, formula } = action.payload;\n      /**\n       * I know! We're mutating the state inside the store here.\n       * This will be fixed as formula change tracking process is well defined.\n       * By now, we need this to have every cell value updated.\n       */\n      state.sheet.updateCell(cellName, formula);\n\n      return state;\n    case SELECT_CELL:\n      const { shift, ctrl } = action.payload.options;\n      let { highlightedAreas } = state;\n\n      if (shift && ctrl) {\n      } else if (shift) {\n        const start = state.selectedCell.name;\n        const end = action.payload.name;\n        const { cells, cellNames } = state.sheet.findCells(start, end);\n        const newArea = { start, end, cells, cellNames };\n        highlightedAreas = [newArea];\n      } else if (ctrl) {\n        const newArea = {\n          start: action.payload.name,\n          end: action.payload.name,\n          cells: [state.sheet.findCell(action.payload.name)],\n          cellNames: [action.payload.name],\n        };\n        highlightedAreas.push(newArea);\n      } else {\n        const newArea = {\n          start: action.payload.name,\n          end: action.payload.name,\n          cells: [state.sheet.findCell(action.payload.name)],\n          cellNames: [action.payload.name],\n        };\n        highlightedAreas = [newArea];\n      }\n\n      return {\n        ...state,\n        selectedCell: action.payload.selected\n          ? {\n              name: action.payload.name,\n              tempFormula: state.sheet.findCell(action.payload.name).formula,\n              editing: false,\n              formulaBarSelected: false,\n            }\n          : undefined,\n        highlightedAreas,\n      };\n    case EDIT_CELL:\n      return {\n        ...state,\n        selectedCell: action.payload.selected\n          ? {\n              name: action.payload.name,\n              tempFormula:\n                action.payload.value ||\n                state.sheet.findCell(action.payload.name).formula,\n              editing: true,\n              formulaBarSelected: false,\n            }\n          : undefined,\n      };\n    case SELECT_FORMULA_BAR:\n      return update(state, {\n        selectedCell: {\n          formulaBarSelected: { $set: action.payload.entering },\n        },\n      });\n    case NEXT_COLUMN:\n      const nextColumnName = state.sheet.nextColumn(state.selectedCell.name);\n      const nextColumnFormula = state.sheet.findCell(nextColumnName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: nextColumnName,\n          tempFormula: nextColumnFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    case NEXT_ROW:\n      const nextRowName = state.sheet.nextRow(state.selectedCell.name);\n      const nextRowFormula = state.sheet.findCell(nextRowName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: nextRowName,\n          tempFormula: nextRowFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    case PREVIOUS_COLUMN:\n      const previousColumnName = state.sheet.previousColumn(\n        state.selectedCell.name\n      );\n      const previousColumnFormula = state.sheet.findCell(previousColumnName)\n        .formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: previousColumnName,\n          tempFormula: previousColumnFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    case PREVIOUS_ROW:\n      const previousRowName = state.sheet.previousRow(state.selectedCell.name);\n      const previousRowFormula = state.sheet.findCell(previousRowName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: previousRowName,\n          tempFormula: previousRowFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import Cell from './Cell';\nimport { cellToIndex, indexToCell } from './cell';\n\nclass Sheet {\n  constructor({ rows, columns, name }) {\n    this.cellNames = new Map();\n    this.cells = this.createCells(rows, columns);\n    this.name = name;\n  }\n\n  register(pointingCell, pointedCellNames) {\n    pointedCellNames\n      .map(name => this.findCell(name))\n      .forEach(cell => cell.registerListener(pointingCell));\n    return this.cellMap(pointedCellNames);\n  }\n\n  cellMap(cellNames) {\n    const map = {};\n    cellNames.forEach(name => {\n      const cell = this.findCell(name);\n      map[name] = cell;\n    });\n    return map;\n  }\n\n  findCell(name) {\n    const index = cellToIndex(name);\n    return this.cells[index.row][index.column];\n  }\n\n  findCells(startName, endName) {\n    const start = cellToIndex(startName);\n    const end = cellToIndex(endName);\n    const rowStep = start.row <= end.row ? 1 : -1;\n    const colStep = start.column <= end.column ? 1 : -1;\n    const cells = [];\n    const cellNames = [];\n    for (let row = start.row; row <= end.row; row += rowStep) {\n      for (let col = start.column; col <= end.column; col += colStep) {\n        const cell = this.cells[row][col];\n        cells.push(cell);\n        cellNames.push(cell.getName());\n      }\n    }\n    return { cells, cellNames };\n  }\n\n  cellIsHighlighted(name, highlightedAreas) {\n    return !!highlightedAreas.find(a => a.cellNames.includes(name));\n  }\n\n  updateCell(name, formula) {\n    this.findCell(name).setFormula(formula);\n  }\n\n  createCells(rowCount, columnCount) {\n    let rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      rows[i] = [];\n      for (let j = 0; j < columnCount; j++) {\n        const cell = new Cell({ sheet: this, formula: '', value: '' });\n        rows[i][j] = cell;\n        this.cellNames.set(cell, indexToCell(i, j));\n      }\n    }\n    return rows;\n  }\n\n  getCellName(cell) {\n    return this.cellNames.get(cell);\n  }\n\n  size() {\n    return { rows: this.rows(), columns: this.columns() };\n  }\n\n  rows() {\n    return this.cells.length;\n  }\n\n  columns() {\n    return this.cells[0].length;\n  }\n\n  nextRow(cellName) {\n    const cell = cellToIndex(cellName);\n    const nextRow = cell.row === this.rows() - 1 ? 0 : cell.row + 1;\n    return indexToCell(nextRow, cell.column);\n  }\n\n  nextColumn(cellName) {\n    const cell = cellToIndex(cellName);\n    const nextColumn = cell.column === this.columns() - 1 ? 0 : cell.column + 1;\n    return indexToCell(cell.row, nextColumn);\n  }\n\n  previousRow(cellName) {\n    const cell = cellToIndex(cellName);\n    const previousRow = cell.row === 0 ? this.rows() - 1 : cell.row - 1;\n    return indexToCell(previousRow, cell.column);\n  }\n\n  previousColumn(cellName) {\n    const cell = cellToIndex(cellName);\n    const previousColumn =\n      cell.column === 0 ? this.columns() - 1 : cell.column - 1;\n    return indexToCell(cell.row, previousColumn);\n  }\n}\n\nexport default Sheet;\n","import { combineReducers } from 'redux';\nimport sheetReducer from './sheetReducer';\n\nexport default combineReducers({\n  sheet: sheetReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}