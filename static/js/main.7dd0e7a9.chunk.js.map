{"version":3,"sources":["components/cellWrapper.js","actions/index.js","actions/types.js","components/FormulaInput.js","components/Cell.js","logic/cell.js","components/FormulaBar.js","components/Sheet.js","history.js","components/Help.js","components/App.js","logic/formula.js","logic/Cell.js","reducers/sheetReducer.js","logic/Sheet.js","reducers/index.js","store.js","index.js"],"names":["ChildComponent","updateCell","cellName","formula","type","payload","updateEditingCell","value","selectCell","name","selected","nextRow","nextColumn","previousRow","previousColumn","FormulaInput","onChange","e","props","target","onKeyDown","which","nextElement","previous","save","preventDefault","way","onFocus","atFormulaBar","selectFormulaBar","onBlur","this","autoFocus","formulaBarSelected","Component","connect","state","sheet","selectedCell","tempFormula","entering","Cell","focusSelecTed","field","focus","onEditCell","editCell","onSelectCell","onEditingKeyDown","onSelectedKeyDown","printableKey","key","String","fromCharCode","editing","className","ref","onClick","onDoubleClick","tabIndex","cell","React","cellWrapper","ownProps","findCell","showSquare","letters","indexToColumn","i","indexToRow","indexToCell","iRow","iColumn","cellToIndex","row","parseInt","column","indexOf","toUpperCase","FormulaBar","icon","faCalculator","Sheet","style","textAlign","cells","map","cellName1","cellName2","getName","j","renderCells","createBrowserHistory","Help","href","rel","App","history","basename","process","path","exact","component","operators","isCell","isNumber","match","isNaN","listeners","Set","pointedCells","cellNames","presentCells","split","filter","trim","register","evaluate","add","getCellName","params","startsWith","substring","length","pointedCellParams","forEach","Object","keys","INITIAL_STATE","rows","columns","Map","createCells","pointingCell","pointedCellNames","registerListener","cellMap","index","setFormula","rowCount","columnCount","set","get","combineReducers","action","update","$set","undefined","nextColumnName","nextColumnFormula","nextRowName","nextRowFormula","previousColumnName","previousColumnFormula","previousRowName","previousRowFormula","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7dd0e7a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nexport default ChildComponent => {\n  class CellWrapper extends Component {\n    showSquare() {\n      if (this.props.selected && !this.props.editing) {\n        return <div className=\"cell-square\"></div>;\n      }\n    }\n\n    render() {\n      return (\n        <td className={this.props.selected ? 'selected' : ''}>\n          <div className=\"cell-wrapper\">\n            <ChildComponent\n              {...this.props}\n              selected={this.props.selected}\n              editing={this.props.editing}\n            />\n            {this.showSquare()}\n          </div>\n        </td>\n      );\n    }\n  }\n\n  return CellWrapper;\n};\n","import {\n  UPDATE_CELL,\n  SELECT_CELL,\n  NEXT_ROW,\n  NEXT_COLUMN,\n  UPDATE_EDITING_CELL,\n  EDIT_CELL,\n  PREVIOUS_ROW,\n  PREVIOUS_COLUMN,\n  SELECT_FORMULA_BAR,\n} from './types';\n\nexport const updateCell = (cellName, formula) => {\n  return { type: UPDATE_CELL, payload: { cellName, formula } };\n};\n\nexport const updateEditingCell = value => {\n  return { type: UPDATE_EDITING_CELL, payload: value };\n};\n\nexport const selectCell = (name, selected) => {\n  return { type: SELECT_CELL, payload: { name, selected } };\n};\n\nexport const editCell = (name, selected, value) => {\n  return { type: EDIT_CELL, payload: { name, selected, value } };\n};\n\nexport const nextRow = () => {\n  return { type: NEXT_ROW };\n};\n\nexport const nextColumn = () => {\n  return { type: NEXT_COLUMN };\n};\n\nexport const previousRow = () => {\n  return { type: PREVIOUS_ROW };\n};\n\nexport const previousColumn = () => {\n  return { type: PREVIOUS_COLUMN };\n};\n\nexport const selectFormulaBar = (entering = true) => {\n  return { type: SELECT_FORMULA_BAR, payload: { entering } };\n};\n","export const UPDATE_CELL = 'UPDATE_CELL';\nexport const UPDATE_EDITING_CELL = 'UPDATE_EDITING_CELL';\nexport const SELECT_CELL = 'SELECT_CELL';\nexport const EDIT_CELL = 'EDIT_CELL';\nexport const NEXT_ROW = 'NEXT_ROW';\nexport const NEXT_COLUMN = 'NEXT_COLUMN';\nexport const PREVIOUS_ROW = 'PREVIOUS_ROW';\nexport const PREVIOUS_COLUMN = 'PREVIOUS_COLUMN';\nexport const SELECT_FORMULA_BAR = 'SELECT_FORMULA_BAR';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateEditingCell,\n  updateCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n  selectFormulaBar,\n  selectCell,\n} from '../actions';\n\nclass FormulaInput extends Component {\n  onChange = e => {\n    this.props.updateEditingCell(e.target.value);\n  };\n\n  onKeyDown = e => {\n    if (e.which === 9) this.nextElement('Column', e, false, true);\n    else if (e.which === 13) this.nextElement('Row', e, false, true);\n    else if (e.which === 27) this.props.selectCell(this.props.name, true);\n  };\n\n  nextElement = (type, e, previous = false, save = false) => {\n    e.preventDefault();\n    const way = previous ? 'previous' : 'next';\n    if (save) {\n      this.props.updateCell(this.props.name, e.target.value);\n    }\n    this.props[`${way}${type}`]();\n  };\n\n  onFocus = () => {\n    if (this.props.atFormulaBar) {\n      this.props.selectFormulaBar(true);\n    }\n  };\n\n  onBlur = e => {\n    if (this.props.atFormulaBar) {\n      this.props.selectFormulaBar(false);\n    }\n    this.props.updateCell(this.props.name, e.target.value);\n  };\n\n  render() {\n    return (\n      <input\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyDown={this.onKeyDown}\n        onChange={this.onChange}\n        type=\"text\"\n        value={this.props.formula}\n        autoFocus={!this.props.formulaBarSelected}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formula: state.sheet.selectedCell.tempFormula,\n    name: state.sheet.selectedCell.name,\n    formulaBarSelected: state.sheet.selectedCell.formulaBarSelected,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateEditingCell,\n  updateCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n  selectFormulaBar,\n  selectCell,\n})(FormulaInput);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateCell,\n  updateEditingCell,\n  editCell,\n  selectCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n} from '../actions';\nimport cellWrapper from './cellWrapper';\nimport FormulaInput from './FormulaInput';\n\nclass Cell extends React.Component {\n  componentDidMount() {\n    this.focusSelecTed();\n  }\n\n  componentDidUpdate() {\n    this.focusSelecTed();\n  }\n\n  focusSelecTed = () => {\n    if (this.field && !this.props.selectedCell.formulaBarSelected) {\n      this.field.focus();\n    }\n  };\n\n  onEditCell = e => {\n    this.props.editCell(this.props.name, true);\n  };\n\n  onSelectCell = e => {\n    this.props.selectCell(this.props.name, true);\n  };\n\n  onEditingKeyDown = e => {\n    if (e.which === 13) this.nextElement('Row', e, false, true);\n    else if (e.which === 37) this.nextElement('Column', e, true, true);\n    else if (e.which === 38) this.nextElement('Row', e, true, true);\n    else if (e.which === 39) this.nextElement('Column', e, false, true);\n    else if (e.which === 40) this.nextElement('Row', e, false, true);\n  };\n\n  onSelectedKeyDown = e => {\n    if (e.which === 113 || e.which === 13) {\n      e.preventDefault();\n      this.props.editCell(this.props.name, true);\n    } else if (e.which === 9) this.nextElement('Column', e);\n    else if (e.which === 37) this.nextElement('Column', e, true);\n    else if (e.which === 38) this.nextElement('Row', e, true);\n    else if (e.which === 39) this.nextElement('Column', e);\n    else if (e.which === 40) this.nextElement('Row', e);\n    else if (this.printableKey(e.which)) {\n      e.preventDefault();\n      this.props.editCell(this.props.name, true, this.printableKey(e.which));\n    }\n  };\n\n  nextElement = (type, e, previous = false, save = false) => {\n    e.preventDefault();\n    const way = previous ? 'previous' : 'next';\n    if (save) {\n      this.props.updateCell(this.props.name, e.target.value);\n    }\n    this.props[`${way}${type}`]();\n  };\n\n  printableKey(key) {\n    // Only letters, numbers and equal for now\n    if (key >= 48 && key <= 90) {\n      return String.fromCharCode(key);\n    } else if (key >= 96 && key <= 105) {\n      return String.fromCharCode(key - 48);\n    } else if (key === 187) {\n      return '=';\n    }\n    return false;\n  }\n\n  render() {\n    if (this.props.selected) {\n      if (this.props.editing) {\n        return (\n          <div className=\"cell selected\">\n            <FormulaInput onKeyDown={this.onEditingKeyDown} />\n          </div>\n        );\n      } else {\n        return (\n          <div\n            ref={field => (this.field = field)}\n            className=\"cell selected\"\n            onClick={this.onSelectCell}\n            onDoubleClick={this.onEditCell}\n            onKeyDown={this.onSelectedKeyDown}\n            tabIndex=\"0\"\n          >\n            <div>{this.props.cell.value || '\\u00A0'}</div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div\n          className=\"cell\"\n          onClick={this.onSelectCell}\n          onDoubleClick={this.onEditCell}\n        >\n          <div>{this.props.cell.value || '\\u00A0'}</div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const cell = state.sheet.sheet.findCell(ownProps.name);\n  return { selectedCell: state.sheet.selectedCell, cell };\n};\n\nexport default cellWrapper(\n  connect(mapStateToProps, {\n    updateCell,\n    updateEditingCell,\n    editCell,\n    selectCell,\n    nextColumn,\n    nextRow,\n    previousColumn,\n    previousRow,\n  })(Cell)\n);\n","const letters = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n\nexport const indexToColumn = i => letters[i];\n\nexport const columnToIndex = column => letters.indexOf(column.toUpperCase());\n\nexport const rowToIndex = row => parseInt(row) - 1;\n\nexport const indexToRow = i => i + 1;\n\nexport const indexToCell = (iRow, iColumn) =>\n  `${indexToColumn(iColumn)}${indexToRow(iRow)}`;\n\nexport const cellToIndex = cell => ({\n  row: rowToIndex(cell[1]),\n  column: columnToIndex(cell[0]),\n});\n\nexport const sameRow = (cellName1, cellName2) =>\n  cellName1 &&\n  cellName2 &&\n  cellToIndex(cellName1).row === cellToIndex(cellName2).row;\n\nexport const sameColumn = (cellName1, cellName2) =>\n  cellName1 &&\n  cellName2 &&\n  cellToIndex(cellName1).column === cellToIndex(cellName2).column;\n","import React from 'react';\nimport FormulaInput from './FormulaInput';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons';\n\nconst FormulaBar = () => (\n  <div className=\"formula-bar\">\n    <div className=\"icon\">\n      <FontAwesomeIcon icon={faCalculator} />\n    </div>\n    <FormulaInput atFormulaBar={true} />\n  </div>\n);\n\nexport default FormulaBar;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Cell from './Cell';\nimport { indexToRow, indexToColumn, sameColumn, sameRow } from '../logic/cell';\nimport FormulaBar from './FormulaBar';\n\nclass Sheet extends React.Component {\n  renderCells() {\n    return (\n      <div className=\"sheet\">\n        <FormulaBar />\n        <table className=\"sheet-table\">\n          <thead style={{ textAlign: 'right' }}>\n            <tr>\n              <th className=\"column-header\"></th>\n              {this.props.cells[0].map((cell, i) => (\n                <th\n                  key={`c${i}`}\n                  className={`column-header ${\n                    sameColumn(this.props.selectedCell?.name, cell.getName())\n                      ? 'selected'\n                      : ''\n                  }`}\n                >\n                  <div>{indexToColumn(i)}</div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.cells.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => (\n                  <Fragment key={j}>\n                    {j === 0 ? (\n                      <th\n                        className={`row-header ${\n                          sameRow(this.props.selectedCell?.name, cell.getName())\n                            ? 'selected'\n                            : ''\n                        }`}\n                      >\n                        <div>{indexToRow(i)}</div>\n                      </th>\n                    ) : (\n                      <></>\n                    )}\n                    <Cell\n                      name={cell.getName()}\n                      selected={\n                        this.props.selectedCell?.name === cell.getName()\n                      }\n                      editing={\n                        this.props.selectedCell?.name === cell.getName() &&\n                        this.props.selectedCell.editing\n                      }\n                    />\n                  </Fragment>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.renderCells()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cells: state.sheet.sheet.cells,\n    selectedCell: state.sheet.selectedCell,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Sheet);\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React from 'react';\n\nconst Help = () => (\n  <div className=\"help\">\n    <p>\n      This app is a work in progress by{' '}\n      <a\n        href=\"https://www.linkedin.com/in/diegostiehl\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Diego Stiehl\n      </a>\n      . You can see its code here:{' '}\n      <a\n        href=\"https://github.com/seccomiro/react-sheets\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        https://github.com/seccomiro/react-sheets\n      </a>\n      .\n    </p>\n    <p>At this point in time you can:</p>\n    <ul>\n      <li>\n        Navigate through cells (enabling editing of them) using <em>TAB</em>,{' '}\n        <em>ENTER</em>, <em>arrows</em> or <em>mouse</em>.\n      </li>\n      <li>\n        Edit cells using <em>F2</em>, <em>ENTER</em> or by clicking at the <em>Formula Bar</em>.\n      </li>\n      <li>\n        Cancel editing using <em>ESC</em>.\n      </li>\n      <li>\n        Type <em>numeric</em> values, like <em>10</em> or <em>99.56</em> at any available\n        cell.\n      </li>\n      <li>\n        Type simple math formulas using the cells, like:{' '}\n        <em>=A1+(B2/C3)*D5-10</em> (try to avoid circular references because\n        it's not solved yet).\n      </li>\n      <li>\n        Edit the values of cells yout pointed on any formula and watch the{' '}\n        <em>automatic recalculation</em> of the entire spreadsheet.\n        <ul>\n          <li>\n            Tip: Try to write a formula that depends on two cells that have\n            formulas that depends on other cells that have regular numbers and,\n            after that, change these regular numbers.\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Help;\n","import React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport Sheet from './Sheet';\nimport history from '../history';\nimport Help from './Help';\n\nconst App = () => {\n  return (\n    <div>\n      <HashRouter history={history} basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Sheet} />\n        </Switch>\n      </HashRouter>\n      <Help />\n    </div>\n  );\n};\n\nexport default App;\n","import { evaluate } from 'mathjs';\n\nexport const operators = /([+,*,/,=,\\-,(,)])/g;\n\nexport const pointedCells = formula => {\n  const presentCells = formula.split(operators).filter(e => isCell(e.trim()));\n  return [...new Set(presentCells)];\n};\n\nexport const isCell = value =>\n  !isNumber(value) && value !== '' && value !== '=' && !value.match(operators);\n\nexport const isNumber = value => !isNaN(value);\n\nexport const evaluateFormula = (formula, params) => {\n  return evaluate(formula, params);\n};\n","import { pointedCells, evaluateFormula } from './formula';\n\nclass Cell {\n  constructor({ sheet, formula = '0', value = '0' }) {\n    this.sheet = sheet;\n    this.formula = formula;\n    this.value = value;\n    this.listeners = new Set();\n    this.pointedCells = {};\n  }\n\n  setFormula(formula) {\n    this.formula = formula;\n    const cellNames = pointedCells(formula);\n    this.pointedCells = this.sheet.register(this, cellNames);\n    this.evaluate();\n  }\n\n  registerListener(cell) {\n    this.listeners.add(cell);\n  }\n\n  getName() {\n    return this.sheet.getCellName(this);\n  }\n\n  evaluate() {\n    if (this.formula.startsWith('=')) {\n      this.value = evaluateFormula(\n        this.formula.substring(1, this.formula.length),\n        this.pointedCellParams()\n      );\n    } else {\n      this.value = this.formula;\n    }\n\n    this.listeners.forEach(cell => cell.evaluate());\n  }\n\n  pointedCellParams() {\n    const map = {};\n    Object.keys(this.pointedCells).forEach(\n      cellName => (map[cellName] = this.pointedCells[cellName].value)\n    );\n    return map;\n  }\n}\n\nexport default Cell;\n","import {\n  UPDATE_CELL,\n  EDIT_CELL,\n  NEXT_COLUMN,\n  NEXT_ROW,\n  UPDATE_EDITING_CELL,\n  SELECT_CELL,\n  PREVIOUS_COLUMN,\n  PREVIOUS_ROW,\n  SELECT_FORMULA_BAR,\n} from '../actions/types';\nimport update from 'react-addons-update';\nimport Sheet from '../logic/Sheet';\n\nconst INITIAL_STATE = {\n  sheet: new Sheet({ rows: 9, columns: 26, name: 'Sheet 1' }),\n  selectedCell: {\n    name: 'A1',\n    editing: false,\n    tempFormula: '',\n    formulaBarSelected: false,\n  },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_EDITING_CELL:\n      return update(state, {\n        selectedCell: {\n          tempFormula: { $set: action.payload.toUpperCase() },\n        },\n      });\n    case UPDATE_CELL:\n      const { cellName, formula } = action.payload;\n      /**\n       * I know! We're mutating the state inside the store here.\n       * This will be fixed as formula change tracking process is well defined.\n       * By now, we need this to have every cell value updated.\n       */\n      state.sheet.updateCell(cellName, formula);\n\n      return state;\n    case SELECT_CELL:\n      return {\n        ...state,\n        selectedCell: action.payload.selected\n          ? {\n              name: action.payload.name,\n              tempFormula: state.sheet.findCell(action.payload.name).formula,\n              editing: false,\n              formulaBarSelected: false,\n            }\n          : undefined,\n      };\n    case EDIT_CELL:\n      return {\n        ...state,\n        selectedCell: action.payload.selected\n          ? {\n              name: action.payload.name,\n              tempFormula:\n                action.payload.value ||\n                state.sheet.findCell(action.payload.name).formula,\n              editing: true,\n              formulaBarSelected: false,\n            }\n          : undefined,\n      };\n    case SELECT_FORMULA_BAR:\n      return update(state, {\n        selectedCell: {\n          formulaBarSelected: { $set: action.payload.entering },\n        },\n      });\n    case NEXT_COLUMN:\n      const nextColumnName = state.sheet.nextColumn(state.selectedCell.name);\n      const nextColumnFormula = state.sheet.findCell(nextColumnName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: nextColumnName,\n          tempFormula: nextColumnFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    case NEXT_ROW:\n      const nextRowName = state.sheet.nextRow(state.selectedCell.name);\n      const nextRowFormula = state.sheet.findCell(nextRowName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: nextRowName,\n          tempFormula: nextRowFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    case PREVIOUS_COLUMN:\n      const previousColumnName = state.sheet.previousColumn(\n        state.selectedCell.name\n      );\n      const previousColumnFormula = state.sheet.findCell(previousColumnName)\n        .formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: previousColumnName,\n          tempFormula: previousColumnFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    case PREVIOUS_ROW:\n      const previousRowName = state.sheet.previousRow(state.selectedCell.name);\n      const previousRowFormula = state.sheet.findCell(previousRowName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: previousRowName,\n          tempFormula: previousRowFormula,\n          editing: false,\n          formulaBarSelected: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import Cell from './Cell';\nimport { cellToIndex, indexToCell } from './cell';\n\nclass Sheet {\n  constructor({ rows, columns, name }) {\n    this.cellNames = new Map();\n    this.cells = this.createCells(rows, columns);\n    this.name = name;\n  }\n\n  register(pointingCell, pointedCellNames) {\n    pointedCellNames\n      .map(name => this.findCell(name))\n      .forEach(cell => cell.registerListener(pointingCell));\n    return this.cellMap(pointedCellNames);\n  }\n\n  cellMap(cellNames) {\n    const map = {};\n    cellNames.forEach(name => {\n      const cell = this.findCell(name);\n      map[name] = cell;\n    });\n    return map;\n  }\n\n  findCell(name) {\n    const index = cellToIndex(name);\n    return this.cells[index.row][index.column];\n  }\n\n  updateCell(name, formula) {\n    this.findCell(name).setFormula(formula);\n  }\n\n  createCells(rowCount, columnCount) {\n    let rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      rows[i] = [];\n      for (let j = 0; j < columnCount; j++) {\n        const cell = new Cell({ sheet: this, formula: '', value: '' });\n        rows[i][j] = cell;\n        this.cellNames.set(cell, indexToCell(i, j));\n      }\n    }\n    return rows;\n  }\n\n  getCellName(cell) {\n    return this.cellNames.get(cell);\n  }\n\n  size() {\n    return { rows: this.rows(), columns: this.columns() };\n  }\n\n  rows() {\n    return this.cells.length;\n  }\n\n  columns() {\n    return this.cells[0].length;\n  }\n\n  nextRow(cellName) {\n    const cell = cellToIndex(cellName);\n    const nextRow = cell.row === this.rows() - 1 ? 0 : cell.row + 1;\n    return indexToCell(nextRow, cell.column);\n  }\n\n  nextColumn(cellName) {\n    const cell = cellToIndex(cellName);\n    const nextColumn = cell.column === this.columns() - 1 ? 0 : cell.column + 1;\n    return indexToCell(cell.row, nextColumn);\n  }\n\n  previousRow(cellName) {\n    const cell = cellToIndex(cellName);\n    const previousRow = cell.row === 0 ? this.rows() - 1 : cell.row - 1;\n    return indexToCell(previousRow, cell.column);\n  }\n\n  previousColumn(cellName) {\n    const cell = cellToIndex(cellName);\n    const previousColumn =\n      cell.column === 0 ? this.columns() - 1 : cell.column - 1;\n    return indexToCell(cell.row, previousColumn);\n  }\n}\n\nexport default Sheet;\n","import { combineReducers } from 'redux';\nimport sheetReducer from './sheetReducer';\n\nexport default combineReducers({\n  sheet: sheetReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}