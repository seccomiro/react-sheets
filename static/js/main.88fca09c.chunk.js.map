{"version":3,"sources":["components/cellWrapper.js","components/Cell.js","actions/index.js","actions/types.js","logic/cell.js","components/Sheet.js","history.js","components/Help.js","components/App.js","logic/formula.js","logic/Cell.js","reducers/sheetReducer.js","logic/Sheet.js","reducers/index.js","store.js","index.js"],"names":["ChildComponent","Cell","onChange","e","props","updateEditingCell","target","value","onEditCell","editCell","name","onSelectCell","selectCell","onEditingKeyDown","which","nextElement","onSelectedKeyDown","preventDefault","printableKey","type","previous","save","way","updateCell","onBlur","this","field","focus","key","String","fromCharCode","selected","editing","className","onKeyDown","selectedCell","tempFormula","autoFocus","ref","onClick","onDoubleClick","tabIndex","cell","React","Component","cellWrapper","connect","state","ownProps","sheet","findCell","cellName","formula","payload","nextColumn","nextRow","previousColumn","previousRow","showSquare","letters","indexToColumn","i","indexToRow","indexToCell","iRow","iColumn","cellToIndex","row","parseInt","column","indexOf","toUpperCase","Sheet","style","textAlign","cells","map","cellName1","cellName2","getName","j","renderCells","createBrowserHistory","Help","href","rel","App","history","basename","process","path","exact","component","operators","isCell","isNumber","match","isNaN","listeners","Set","pointedCells","cellNames","presentCells","split","filter","trim","register","evaluate","add","getCellName","params","startsWith","substring","length","pointedCellParams","forEach","Object","keys","INITIAL_STATE","rows","columns","Map","createCells","pointingCell","pointedCellNames","registerListener","cellMap","index","setFormula","rowCount","columnCount","set","get","combineReducers","action","update","$set","undefined","nextColumnName","nextColumnFormula","nextRowName","nextRowFormula","previousColumnName","previousColumnFormula","previousRowName","previousRowFormula","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.88fca09c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nexport default ChildComponent => {\n  class CellWrapper extends Component {\n    showSquare() {\n      if (this.props.selected && !this.props.editing) {\n        return <div className=\"cell-square\"></div>;\n      }\n    }\n\n    render() {\n      return (\n        <td className={this.props.selected ? 'selected' : ''}>\n          <div className=\"cell-wrapper\">\n            <ChildComponent\n              {...this.props}\n              selected={this.props.selected}\n              editing={this.props.editing}\n            />\n            {this.showSquare()}\n          </div>\n        </td>\n      );\n    }\n  }\n\n  return CellWrapper;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateCell,\n  updateEditingCell,\n  editCell,\n  selectCell,\n  nextColumn,\n  nextRow,\n  previousColumn,\n  previousRow,\n} from '../actions';\nimport cellWrapper from './cellWrapper';\n\nclass Cell extends React.Component {\n  componentDidMount() {\n    if (this.field) {\n      this.field.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.field) {\n      this.field.focus();\n    }\n  }\n\n  onChange = e => {\n    this.props.updateEditingCell(e.target.value);\n  };\n\n  onEditCell = e => {\n    this.props.editCell(this.props.name, true);\n  };\n\n  onSelectCell = e => {\n    this.props.selectCell(this.props.name, true);\n  };\n\n  onEditingKeyDown = e => {\n    if (e.which === 9) this.nextElement('Column', e, false, true);\n    else if (e.which === 13) this.nextElement('Row', e, false, true);\n    else if (e.which === 37) this.nextElement('Column', e, true, true);\n    else if (e.which === 38) this.nextElement('Row', e, true, true);\n    else if (e.which === 39) this.nextElement('Column', e, false, true);\n    else if (e.which === 40) this.nextElement('Row', e, false, true);\n    else if (e.which === 27) this.props.selectCell(this.props.name, true);\n  };\n\n  onSelectedKeyDown = e => {\n    if (e.which === 113 || e.which === 13) {\n      e.preventDefault();\n      this.props.editCell(this.props.name, true);\n    } else if (e.which === 9) this.nextElement('Column', e);\n    else if (e.which === 37) this.nextElement('Column', e, true);\n    else if (e.which === 38) this.nextElement('Row', e, true);\n    else if (e.which === 39) this.nextElement('Column', e);\n    else if (e.which === 40) this.nextElement('Row', e);\n    else if (this.printableKey(e.which)) {\n      e.preventDefault();\n      this.props.editCell(this.props.name, true, this.printableKey(e.which));\n    }\n  };\n\n  nextElement = (type, e, previous = false, save = false) => {\n    e.preventDefault();\n    const way = previous ? 'previous' : 'next';\n    if (save) {\n      this.props.updateCell(this.props.name, e.target.value);\n    }\n    this.props[`${way}${type}`]();\n  };\n\n  printableKey(key) {\n    // return (\n    // // OLD\n    // (key > 47 && key < 58) || // number keys\n    // key === 32 ||\n    // (key > 64 && key < 91) || // letter keys\n    // (key > 95 && key < 112) || // numpad keys\n    // (key > 185 && key < 193) || // ;=,-./` (in order)\n    // (key > 218 && key < 223) // [\\]' (in order)\n    // // NEW\n    // (key >= 48 && key <= 90) ||\n    // (key >= 96 && key <= 111) ||\n    // (key >= 186 && key <= 222)\n    // );\n\n    // Only letters, numbers and equal for now\n    if (key >= 48 && key <= 90) {\n      return String.fromCharCode(key);\n    } else if (key >= 96 && key <= 105) {\n      return String.fromCharCode(key - 48);\n    } else if (key === 187) {\n      return '=';\n    }\n    return false;\n  }\n\n  onBlur = e => {\n    this.props.updateCell(this.props.name, e.target.value);\n  };\n\n  render() {\n    if (this.props.selected) {\n      if (this.props.editing) {\n        return (\n          <div className=\"cell selected\">\n            <input\n              onKeyDown={this.onEditingKeyDown}\n              onChange={this.onChange}\n              onBlur={this.onBlur}\n              type=\"text\"\n              value={this.props.selectedCell.tempFormula}\n              autoFocus\n            />\n          </div>\n        );\n      } else {\n        return (\n          <div\n            ref={field => (this.field = field)}\n            className=\"cell selected\"\n            onClick={this.onSelectCell}\n            onDoubleClick={this.onEditCell}\n            onKeyDown={this.onSelectedKeyDown}\n            tabIndex=\"0\"\n          >\n            <div>{this.props.cell.value || '\\u00A0'}</div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div\n          className=\"cell\"\n          onClick={this.onSelectCell}\n          onDoubleClick={this.onEditCell}\n        >\n          <div>{this.props.cell.value || '\\u00A0'}</div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const cell = state.sheet.sheet.findCell(ownProps.name);\n  return { selectedCell: state.sheet.selectedCell, cell };\n};\n\nexport default cellWrapper(\n  connect(mapStateToProps, {\n    updateCell,\n    updateEditingCell,\n    editCell,\n    selectCell,\n    nextColumn,\n    nextRow,\n    previousColumn,\n    previousRow,\n  })(Cell)\n);\n","import {\n  UPDATE_CELL,\n  SELECT_CELL,\n  NEXT_ROW,\n  NEXT_COLUMN,\n  UPDATE_EDITING_CELL,\n  EDIT_CELL,\n  PREVIOUS_ROW,\n  PREVIOUS_COLUMN,\n} from './types';\n\nexport const updateCell = (cellName, formula) => {\n  return { type: UPDATE_CELL, payload: { cellName, formula } };\n};\n\nexport const updateEditingCell = value => {\n  return { type: UPDATE_EDITING_CELL, payload: value };\n};\n\nexport const selectCell = (name, selected) => {\n  return { type: SELECT_CELL, payload: { name, selected } };\n};\n\nexport const editCell = (name, selected, value) => {\n  return { type: EDIT_CELL, payload: { name, selected, value } };\n};\n\nexport const nextRow = () => {\n  return { type: NEXT_ROW };\n};\n\nexport const nextColumn = () => {\n  return { type: NEXT_COLUMN };\n};\n\nexport const previousRow = () => {\n  return { type: PREVIOUS_ROW };\n};\n\nexport const previousColumn = () => {\n  return { type: PREVIOUS_COLUMN };\n};\n","export const UPDATE_CELL = 'UPDATE_CELL';\nexport const UPDATE_EDITING_CELL = 'UPDATE_EDITING_CELL';\nexport const SELECT_CELL = 'SELECT_CELL';\nexport const EDIT_CELL = 'EDIT_CELL';\nexport const NEXT_ROW = 'NEXT_ROW';\nexport const NEXT_COLUMN = 'NEXT_COLUMN';\nexport const PREVIOUS_ROW = 'PREVIOUS_ROW';\nexport const PREVIOUS_COLUMN = 'PREVIOUS_COLUMN';\n","const letters = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n\nexport const indexToColumn = i => letters[i];\n\nexport const columnToIndex = column => letters.indexOf(column.toUpperCase());\n\nexport const rowToIndex = row => parseInt(row) - 1;\n\nexport const indexToRow = i => i + 1;\n\nexport const indexToCell = (iRow, iColumn) =>\n  `${indexToColumn(iColumn)}${indexToRow(iRow)}`;\n\nexport const cellToIndex = cell => ({\n  row: rowToIndex(cell[1]),\n  column: columnToIndex(cell[0]),\n});\n\nexport const sameRow = (cellName1, cellName2) =>\n  cellName1 &&\n  cellName2 &&\n  cellToIndex(cellName1).row === cellToIndex(cellName2).row;\n\nexport const sameColumn = (cellName1, cellName2) =>\n  cellName1 &&\n  cellName2 &&\n  cellToIndex(cellName1).column === cellToIndex(cellName2).column;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Cell from './Cell';\nimport { indexToRow, indexToColumn, sameColumn, sameRow } from '../logic/cell';\n\nclass Sheet extends React.Component {\n  renderCells() {\n    return (\n      <table className=\"sheet-table\">\n        <thead style={{ textAlign: 'right' }}>\n          <tr>\n            <th className=\"column-header\"></th>\n            {this.props.cells[0].map((cell, i) => (\n              <th\n                key={`c${i}`}\n                className={`column-header ${\n                  sameColumn(this.props.selectedCell?.name, cell.getName())\n                    ? 'selected'\n                    : ''\n                }`}\n              >\n                <div>{indexToColumn(i)}</div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.cells.map((row, i) => (\n            <tr key={i}>\n              {row.map((cell, j) => (\n                <Fragment key={j}>\n                  {j === 0 ? (\n                    <th\n                      className={`row-header ${\n                        sameRow(this.props.selectedCell?.name, cell.getName())\n                          ? 'selected'\n                          : ''\n                      }`}\n                    >\n                      <div>{indexToRow(i)}</div>\n                    </th>\n                  ) : (\n                    <></>\n                  )}\n                  <Cell\n                    name={cell.getName()}\n                    selected={this.props.selectedCell?.name === cell.getName()}\n                    editing={\n                      this.props.selectedCell?.name === cell.getName() &&\n                      this.props.selectedCell.editing\n                    }\n                  />\n                </Fragment>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    return <div>{this.renderCells()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cells: state.sheet.sheet.cells,\n    selectedCell: state.sheet.selectedCell,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Sheet);\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React from 'react';\n\nconst Help = () => (\n  <div className=\"help\">\n    <p>\n      This app is a work in progress by{' '}\n      <a\n        href=\"https://www.linkedin.com/in/diegostiehl\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Diego Stiehl\n      </a>\n      . You can see its code here:{' '}\n      <a\n        href=\"https://github.com/seccomiro/react-sheets\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        https://github.com/seccomiro/react-sheets\n      </a>\n      .\n    </p>\n    <p>At this point in time you can:</p>\n    <ul>\n      <li>\n        Navigate through cells (enabling editing of them) using <em>TAB</em>,{' '}\n        <em>ENTER</em>, <em>arrows</em> and <em>mouse</em>.\n      </li>\n      <li>\n        Edit cells using <em>F2</em> and <em>ENTER</em>.\n      </li>\n      <li>\n        Cancel editing using <em>ESC</em>.\n      </li>\n      <li>\n        Type numeric values, like <em>10</em> or <em>99.56</em> at any available\n        cell.\n      </li>\n      <li>\n        Type simple math formulas using the cells, like:{' '}\n        <em>=A1+(B2/C3)*D5-10</em> (try to avoid circular references because\n        it's not solved yet).\n      </li>\n      <li>\n        Edit the values of cells yout pointed on any formula and watch the{' '}\n        <em>automatic recalculation</em> of the entire spreadsheet.\n        <ul>\n          <li>\n            Tip: Try to write a formula that depends on two cells that have\n            formulas that depends on other cells that have regular numbers and,\n            after that, change these regular numbers.\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Help;\n","import React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport Sheet from './Sheet';\nimport history from '../history';\nimport Help from './Help';\n\nconst App = () => {\n  return (\n    <div>\n      <HashRouter history={history} basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Sheet} />\n        </Switch>\n      </HashRouter>\n      <Help />\n    </div>\n  );\n};\n\nexport default App;\n","import { evaluate } from 'mathjs';\n\nexport const operators = /([+,*,/,=,\\-,(,)])/g;\n\nexport const pointedCells = formula => {\n  const presentCells = formula.split(operators).filter(e => isCell(e.trim()));\n  return [...new Set(presentCells)];\n};\n\nexport const isCell = value =>\n  !isNumber(value) && value !== '' && value !== '=' && !value.match(operators);\n\nexport const isNumber = value => !isNaN(value);\n\nexport const evaluateFormula = (formula, params) => {\n  return evaluate(formula, params);\n};\n","import { pointedCells, evaluateFormula } from './formula';\n\nclass Cell {\n  constructor({ sheet, formula = '0', value = '0' }) {\n    this.sheet = sheet;\n    this.formula = formula;\n    this.value = value;\n    this.listeners = new Set();\n    this.pointedCells = {};\n  }\n\n  setFormula(formula) {\n    this.formula = formula;\n    const cellNames = pointedCells(formula);\n    this.pointedCells = this.sheet.register(this, cellNames);\n    this.evaluate();\n  }\n\n  registerListener(cell) {\n    this.listeners.add(cell);\n  }\n\n  getName() {\n    return this.sheet.getCellName(this);\n  }\n\n  evaluate() {\n    if (this.formula.startsWith('=')) {\n      this.value = evaluateFormula(\n        this.formula.substring(1, this.formula.length),\n        this.pointedCellParams()\n      );\n    } else {\n      this.value = this.formula;\n    }\n\n    this.listeners.forEach(cell => cell.evaluate());\n  }\n\n  pointedCellParams() {\n    const map = {};\n    Object.keys(this.pointedCells).forEach(\n      cellName => (map[cellName] = this.pointedCells[cellName].value)\n    );\n    return map;\n  }\n}\n\nexport default Cell;\n","import {\n  UPDATE_CELL,\n  EDIT_CELL,\n  NEXT_COLUMN,\n  NEXT_ROW,\n  UPDATE_EDITING_CELL,\n  SELECT_CELL,\n  PREVIOUS_COLUMN,\n  PREVIOUS_ROW,\n} from '../actions/types';\nimport update from 'react-addons-update';\nimport Sheet from '../logic/Sheet';\n\nconst INITIAL_STATE = {\n  sheet: new Sheet({ rows: 9, columns: 26, name: 'Sheet 1' }),\n  selectedCell: { name: 'A1', editing: false, tempFormula: '' },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_EDITING_CELL:\n      return update(state, {\n        selectedCell: {\n          tempFormula: { $set: action.payload.toUpperCase() },\n        },\n      });\n    case UPDATE_CELL:\n      const { cellName, formula } = action.payload;\n      /**\n       * I know! We're mutating the state inside the store here.\n       * This will be fixed as formula change tracking process is well defined.\n       * By now, we need this to have every cell value updated.\n       */\n      state.sheet.updateCell(cellName, formula);\n\n      return state;\n    case SELECT_CELL:\n      return {\n        ...state,\n        selectedCell: action.payload.selected\n          ? {\n              name: action.payload.name,\n              tempFormula: state.sheet.findCell(action.payload.name).formula,\n              editing: false,\n            }\n          : undefined,\n      };\n    case EDIT_CELL:\n      return {\n        ...state,\n        selectedCell: action.payload.selected\n          ? {\n              name: action.payload.name,\n              tempFormula:\n                action.payload.value ||\n                state.sheet.findCell(action.payload.name).formula,\n              editing: true,\n            }\n          : undefined,\n      };\n    case NEXT_COLUMN:\n      const nextColumnName = state.sheet.nextColumn(state.selectedCell.name);\n      const nextColumnFormula = state.sheet.findCell(nextColumnName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: nextColumnName,\n          tempFormula: nextColumnFormula,\n          editing: false,\n        },\n      };\n    case NEXT_ROW:\n      const nextRowName = state.sheet.nextRow(state.selectedCell.name);\n      const nextRowFormula = state.sheet.findCell(nextRowName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: nextRowName,\n          tempFormula: nextRowFormula,\n          editing: false,\n        },\n      };\n    case PREVIOUS_COLUMN:\n      const previousColumnName = state.sheet.previousColumn(\n        state.selectedCell.name\n      );\n      const previousColumnFormula = state.sheet.findCell(previousColumnName)\n        .formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: previousColumnName,\n          tempFormula: previousColumnFormula,\n          editing: false,\n        },\n      };\n    case PREVIOUS_ROW:\n      const previousRowName = state.sheet.previousRow(state.selectedCell.name);\n      const previousRowFormula = state.sheet.findCell(previousRowName).formula;\n      return {\n        ...state,\n        selectedCell: {\n          ...state.selectedCell,\n          name: previousRowName,\n          tempFormula: previousRowFormula,\n          editing: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import Cell from './Cell';\nimport { cellToIndex, indexToCell } from './cell';\n\nclass Sheet {\n  constructor({ rows, columns, name }) {\n    this.cellNames = new Map();\n    this.cells = this.createCells(rows, columns);\n    this.name = name;\n  }\n\n  register(pointingCell, pointedCellNames) {\n    pointedCellNames\n      .map(name => this.findCell(name))\n      .forEach(cell => cell.registerListener(pointingCell));\n    return this.cellMap(pointedCellNames);\n  }\n\n  cellMap(cellNames) {\n    const map = {};\n    cellNames.forEach(name => {\n      const cell = this.findCell(name);\n      map[name] = cell;\n    });\n    return map;\n  }\n\n  findCell(name) {\n    const index = cellToIndex(name);\n    return this.cells[index.row][index.column];\n  }\n\n  updateCell(name, formula) {\n    this.findCell(name).setFormula(formula);\n  }\n\n  createCells(rowCount, columnCount) {\n    let rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      rows[i] = [];\n      for (let j = 0; j < columnCount; j++) {\n        const cell = new Cell({ sheet: this, formula: '', value: '' });\n        rows[i][j] = cell;\n        this.cellNames.set(cell, indexToCell(i, j));\n      }\n    }\n    return rows;\n  }\n\n  getCellName(cell) {\n    return this.cellNames.get(cell);\n  }\n\n  size() {\n    return { rows: this.rows(), columns: this.columns() };\n  }\n\n  rows() {\n    return this.cells.length;\n  }\n\n  columns() {\n    return this.cells[0].length;\n  }\n\n  nextRow(cellName) {\n    const cell = cellToIndex(cellName);\n    const nextRow = cell.row === this.rows() - 1 ? 0 : cell.row + 1;\n    return indexToCell(nextRow, cell.column);\n  }\n\n  nextColumn(cellName) {\n    const cell = cellToIndex(cellName);\n    const nextColumn = cell.column === this.columns() - 1 ? 0 : cell.column + 1;\n    return indexToCell(cell.row, nextColumn);\n  }\n\n  previousRow(cellName) {\n    const cell = cellToIndex(cellName);\n    const previousRow = cell.row === 0 ? this.rows() - 1 : cell.row - 1;\n    return indexToCell(previousRow, cell.column);\n  }\n\n  previousColumn(cellName) {\n    const cell = cellToIndex(cellName);\n    const previousColumn =\n      cell.column === 0 ? this.columns() - 1 : cell.column - 1;\n    return indexToCell(cell.row, previousColumn);\n  }\n}\n\nexport default Sheet;\n","import { combineReducers } from 'redux';\nimport sheetReducer from './sheetReducer';\n\nexport default combineReducers({\n  sheet: sheetReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}